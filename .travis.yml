#---
#sudo: required

#env:
#  - distribution: ubuntu
#    version: xenial

#services:
#  - docker

#before_install:
#  - 'sudo docker pull ${distribution}:${version}'
#  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'

#script:
#  - container_id=$(mktemp)
#  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}/ansible":/etc/ansible/:ro ${distribution}-${version}:ansible > "${container_id}"'
#  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/db/tests/test.yml --syntax-check'
#  - >
#    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/db/tests/test.yml -i /etc/ansible/roles/db/tests/inventory
#    | grep -q 'changed=0.*failed=0' && echo "Успешна проверка - db" || exit 1
#  - 'sudo docker rm -f "$(cat ${container_id})"'

#  - container_id=$(mktemp)
#  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}/ansible":/etc/ansible/:ro ${distribution}-${version}:ansible > "${container_id}"'
#  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/app/tests/test.yml --syntax-check'
#  - >
#    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/app/tests/test.yml -i /etc/ansible/roles/app/tests/inventory
#    | grep -q 'changed=0.*failed=0' && echo "Успешна проверка - app" || exit 1
#  - 'sudo docker rm -f "$(cat ${container_id})"'

#  - container_id=$(mktemp)
#  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}/ansible":/etc/ansible/:ro ${distribution}-${version}:ansible > "${container_id}"'
#  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/nginx/tests/test.yml --syntax-check'
#  - >
#    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/nginx/tests/test.yml -i /etc/ansible/roles/nginx/tests/inventory
#    | grep -q 'changed=0.*failed=0' && echo "Успешна проверка - nginx" || exit 1
#  - 'sudo docker rm -f "$(cat ${container_id})"'

---
dist: trusty
sudo: required
language: bash
before_install:
- curl https://raw.githubusercontent.com/express42/otus-homeworks/2019-08/run.sh |
  bash
notifications:
  slack:
    rooms:
      secure: tKztuB+t+hePNaPZS9MZIhuU8FMLqZ09jNlTaclw9gPSkd7dA2bC6NXKGjuDorDuox3Wc/LpvFD76zGaAEBZVt/MK3bWgjawCBzNhTCdp+H7cJ9SKbMhJHf42mKaSo16zxtWhlXajAsmcFg5ZgMGobWyW3hmcc0dlnBa/JS1jlpwUWJd/jk2WRgz3wsPIFlN/QAhNaKfAhskMBQh2i4wnyMBOeBlxKcmj2BBqjog8R2Ip9S07S7FGSTmExNGlanes35UrwwqGvgbQ32Y0Jwjbh5rmqkzP1nApmebKZA30PpN4kcIBdH2idjVKctuvKEYRm6jhzz5EMo+szgF4ZigO4lPsyagH8Tmd1TK7LiiBMShwweGDpW9z7LyGENS6CJ94YuiU8yJxEJS1tHLYhusl65Ck05bt0w96dFYR1s6ZPky7ZpINzalxfXvj0m7LH5wOpimxcS23fYQ1d/De4BSaDC9Eh+6aw5ccEH5D7BK1ZOygVPD3PuzLv4vzyxvjdpcuEKFU90Ep0w5VZRozWYCntPeOtEuCiW09bssyD4u51ilC/NVKHsP9nw2ZJjcAMFqp8ZKiOry2NYCclL6wztnoFjnAyTtPdC4p05UKr3FIaBfIjMB14ySZR43PPk9pNBKI/3Th/uBY7bcyXRznPz1fw2iVQ6HxvTWngmeoUv/uy0=
